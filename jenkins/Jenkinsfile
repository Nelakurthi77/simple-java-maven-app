properties([parameters([string(name: 'Bucket_Name', defaultValue: 'prasadjenkins'),string(name: 'Bucket_Name1', defaultValue: 'packer-packs')])])
pipeline {
    agent {
        docker {
            image ''
            args ''
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'maven test'
            }
        }
    
        //    post {
        //        success  {
        //            emailext  (
        //        to: "nelakurthiguf15209@gmail.com",
        //       subject: "Job was Successful: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
        //        body: """=== Job Details as Below === 
        //          Job Name = '${env.JOB_NAME}'
        //         Job Build Number = '${env.BUILD_NUMBER}'
        //          Build Info @ '${env.BUILD_URL}' 
         //         """
         //   )
         //       }
          //      failure  {
           //         emailext  (
           //     to: "nelakurthiguf15209@gmail.com",
           //     subject: "Job Failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
           //     body: """=== Job Details as Below === 
           //       Job Name = '${env.JOB_NAME}'
           //       Job Build Number = '${env.BUILD_NUMBER}'
            //      Build Info @ '${env.BUILD_URL}' 
            //      """
            //)
            //    }
           // }
        //}
        
        stage('Store-in-S3') {
            steps {
                sh "aws s3 cp /var/lib/jenkins/scripts/junkin/target/my-app-1.0-SNAPSHOT.jar s3://${params.Bucket_Name}/"
            }
        }
        stage('Store-in-S3b') { 
            steps {
                input message: 'lets allow'
                sh "aws s3 cp /var/lib/jenkins/junkin/scripts/target/my-app-1.0-SNAPSHOT.jar s3://${params.Bucket_Name1}/"
             }
        }
       }
}
